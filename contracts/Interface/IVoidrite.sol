// SPDX-License-Identifier: MIT
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.8.0. SEE SOURCE BELOW. !!
pragma solidity >=0.7.0 <0.9.0;

interface IVoidrite {

event ApprovalForAll( address indexed account,address indexed operator,bool approved ) ;
event RoleAdminChanged( bytes32 indexed role,bytes32 indexed previousAdminRole,bytes32 indexed newAdminRole ) ;
event RoleGranted( bytes32 indexed role,address indexed account,address indexed sender ) ;
event RoleRevoked( bytes32 indexed role,address indexed account,address indexed sender ) ;
event TransferBatch( address indexed operator,address indexed from,address indexed to,uint256[] ids,uint256[] values ) ;
event TransferSingle( address indexed operator,address indexed from,address indexed to,uint256 id,uint256 value ) ;
event URI( string value,uint256 indexed id ) ;
event VoidBuy( address indexed to,uint256 amount ) ;
event VoidCleanse( address indexed from,uint256 amount ) ;
event VoidSell( address indexed from,uint256 amount ) ;
event VoidriteConsumed( address indexed from,uint256 amount ) ;
event VoidriteHarvested( address indexed to,uint256 amount ) ;
function ADMIN_ROLE(  ) external view returns (bytes32 ) ;
function BuyPrice(  ) external view returns (uint256 ) ;
function CLEANER_ROLE(  ) external view returns (bytes32 ) ;
function CleanerTransfer( address from,address to,uint256 id,uint256 amount ) external   ;
function CooldownTime(  ) external view returns (uint256 ) ;
function CurrentSupply(  ) external view returns (uint256 ) ;
function DEFAULT_ADMIN_ROLE(  ) external view returns (bytes32 ) ;
function EthPoolBalance(  ) external view returns (uint256 ) ;
function LastStaked( address  ) external view returns (uint256 ) ;
function MaxMintsPerTx(  ) external view returns (uint256 ) ;
function MaxSupply(  ) external view returns (uint256 ) ;
function MintPrice(  ) external view returns (uint256 ) ;
function MintingEnabled(  ) external view returns (bool ) ;
function SellPrice(  ) external view returns (uint256 ) ;
function StakedBalance( address  ) external view returns (uint256 ) ;
function Stakers( uint256  ) external view returns (address ) ;
function TotalStaked(  ) external view returns (uint256 ) ;
function VOIDRITE(  ) external view returns (uint256 ) ;
function VOIDTOUCHED(  ) external view returns (uint256 ) ;
function VoidritePool(  ) external view returns (uint256 ) ;
function WithdrawEther( uint256 _amount ) external   ;
function WithdrawTokens( uint256 amount ) external   ;
function addAddressToAdmin( address account ) external   ;
function addAddressToCleaner( address account ) external   ;
function airDrop( address to,uint256 amount ) external   ;
function balanceOf( address account,uint256 id ) external view returns (uint256 ) ;
function balanceOfBatch( address[] memory accounts,uint256[] memory ids ) external view returns (uint256[] memory ) ;
function burn( address account,uint256 id,uint256 amount ) external   ;
function burnBatch( address account,uint256[] memory ids,uint256[] memory amounts ) external   ;
function buyVoidrite( uint256 amount ) external payable  ;
function contractURI(  ) external view returns (string memory ) ;
function exists( uint256 id ) external view returns (bool ) ;
function getRoleAdmin( bytes32 role ) external view returns (bytes32 ) ;
function grantRole( bytes32 role,address account ) external   ;
function hasRole( bytes32 role,address account ) external view returns (bool ) ;
function isApprovedForAll( address account,address operator ) external view returns (bool ) ;
function mint( uint256 amount ) external payable  ;
function onERC1155BatchReceived( address ,address ,uint256[] memory ,uint256[] memory ,bytes memory  ) external  returns (bytes4 ) ;
function onERC1155Received( address ,address ,uint256 ,uint256 ,bytes memory  ) external  returns (bytes4 ) ;
function renounceRole( bytes32 role,address account ) external   ;
function revokeRole( bytes32 role,address account ) external   ;
function safeBatchTransferFrom( address from,address to,uint256[] memory ids,uint256[] memory amounts,bytes memory data ) external   ;
function safeTransferFrom( address from,address to,uint256 id,uint256 amount,bytes memory data ) external   ;
function sellVoidrite( uint256 amount ) external   ;
function setApprovalForAll( address operator,bool approved ) external   ;
function setBuyPrice( uint256 _buyPrice ) external   ;
function setContractURI( string memory newURI ) external   ;
function setCooldownStake( uint256 _time ) external   ;
function setMaxMintPerTx( uint256 maxTx ) external   ;
function setMaxSupply( uint256 supply ) external   ;
function setMintPrice( uint256 _mintPrice ) external   ;
function setSellPrice( uint256 _sellPrice ) external   ;
function setTokenURI( uint256 tokenId,string memory newURI ) external   ;
function supportsInterface( bytes4 interfaceId ) external view returns (bool ) ;
function toggleMinting( bool enabled ) external   ;
function totalSupply( uint256 id ) external view returns (uint256 ) ;
function uri( uint256 tokenId ) external view returns (string memory ) ;
}